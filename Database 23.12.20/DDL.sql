SELECT 학생ID, MAX(성적)
 FROM 성적표
 GROUP BY 학생ID;
 
 SELECT 학생ID, ROUND(AVG(성적), 1 ) AS 평균성적
 FROM 성적표
 GROUP BY 학생ID;
 
 SELECT MAX(연봉) AS 최고연봉, MIN(연봉) AS 최소연봉
 FROM 직원;
 
 SELECT 소속반, COUNT(*) AS 반별인원수
 FROM 수강생정보
 GROUP BY 소속반;
 
 SELECT 학생ID, AVG(성적) AS 수학제외평균
 FROM 성적표
 WHERE 과목 != '수학'
 GROUP BY 학생ID;
 
 SELECT 부서ID, SUM(연봉) AS 부서별연봉합계
 FROM 직원
 WHERE 부서ID IS NOT NULL
 GROUP BY 부서ID;
 
 SELECT A.직원ID, COUNT(B.연락처) AS 연락처개수
 FROM 직원 A LEFT OUTER JOIN 직원연락처 B ON (A.직원ID = B.직원ID)
 GROUP BY A.직원ID
 ORDER BY 직원ID;
 
 SELECT 소속반, COUNT(*) AS 인원수
 FROM 수강생정보
 GROUP BY 소속반
 HAVING COUNT(*) >= 3;
 
 SELECT 부서ID, MAX(연봉)
 FROM 직원
 GROUP BY 부서ID
 HAVING MAX(연봉) = 7500;
 
 SELECT 학생ID, ROUND(AVG(성적), 1) AS 평균성적
 FROM 성적표
 GROUP BY 학생ID
 HAVING AVG(성적) IS NOT NULL
 ORDER BY 학생ID;
 
 --CREATE OR DROP TABLE--
 
 CREATE TABLE QUIZ_TABLE (
 Q_ID NUMBER(3,0) NOT NULL,
 Q_CONTENT VARCHAR2(200) NOT NULL,
 Q_ANSWER VARCHAR(100) NOT NULL,
 REG_DATE DATE DEFAULT SYSDATE,
 Q_BINGO VARCHAR(100) DEFAULT 'O');
 
 CREATE TABLE 회원정보(
 회원ID VARCHAR2(10) NOT NULL,
 이름 VARCHAR2(20) NOT NULL,
 가입일자 DATE,
 나이 NUMBER DEFAULT 0);
 
 CREATE TABLE 회원연락처(
 회원ID VARCHAR2(10) NOT NULL,
 구분코드 VARCHAR2(10) NOT NULL,
 연락처 VARCHAR2(15) NOT NULL);
 
 CREATE TABLE 회원주소(
 회원ID VARCHAR2(10) NOT NULL,
 도로명주소 VARCHAR2(200) NOT NULL);
 
 ALTER TABLE 회원정보 ADD CONSTRAINT PK_회원정보 PRIMARY KEY(회원ID);
 ALTER TABLE 회원연락처 ADD CONSTRAINT PK_회원연락처 PRIMARY KEY(회원ID, 구분코드);
 ALTER TABLE 회원주소 ADD CONSTRAINT PK_회원주소 PRIMARY KEY(회원ID);
 
 
ALTER TABLE 회원연락처 ADD CONSTRAINT FK_회원연락처 FOREIGN KEY(회원ID) REFERENCES 회원정보(회원ID);
ALTER TABLE 회원주소 ADD CONSTRAINT FK_회원주소 FOREIGN KEY(회원ID) REFERENCES 회원정보(회원ID);

DROP TABLE 회원정보;
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = '회원정보';
DROP TABLE 회원정보 CASCADE CONSTRAINTS;


--SEQUENCE--

CREATE SEQUENCE 회원ID_SEQ;

SELECT 회원ID_SEQ.NEXTVAL
FROM DUAL;

DROP SEQUENCE 회원ID_SEQ;

--VIEW--
CREATE VIEW 부서별최고연봉_VIEW AS
SELECT 부서ID , MAX(연봉) AS 부서별최고연봉
FROM 직원
GROUP BY 부서ID
ORDER BY 부서ID;

SELECT * FROM 부서별최고연봉_VIEW;

DROP VIEW 부서별최고연봉_VIEW;
